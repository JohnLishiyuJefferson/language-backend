字典设计

1. 日语它是有汉字写法 和 假名写法的。かおづくり 顔作り
那，存的时候，是以哪个作为主键呢。还是说，汉字一列，假名一列。然后，索引的话，两列都做索引。
所以就三列？汉字，假名，解释，词性。

2. 反正，单词也就几万个，数据量实在小的可怜。所以怎么样都不会有性能问题。

3. 设计唯一约束。就用汉字做唯一约束吧。毕竟，会出现很多读音相同的词。但是汉字不会一样的。然后，没有汉字的，就把假名作为汉字？
这样不会导致违反唯一约束吧。如果没有汉字，那么这个词就只有假名，那么只有假名的词，自然不会出现同音不同义的情况。
事实证明，会出现汉字相同而读音不同的词
合(い)印 あいいん ⓪【合(い)印】1 名 （加蓋在執照和存根聯接處的）騎縫章。
合(い)印 あいじるし ③【合(い)印】1 名 （區別敵我用的）符號、暗號。
所以，唯一约束得按照汉字和假名来组成。


4.目前尚未添加唯一约束。也没有把 組み上(が)り 这种的变成两条数据。
发现数据中，既有中文括号，也有英文括号。


1. 查找包含至少一对括号的记录
要同时匹配中文括号和英文括号，可以使用以下正则表达式：

sql
Copy
Edit
SELECT id, hanzi
FROM word_entry
WHERE hanzi REGEXP '（[^）]*）|\\([^)]*\\)';

2. 查找仅包含一对括号的记录
sql
Copy
Edit
SELECT id, hanzi
FROM word_entry
WHERE hanzi REGEXP '^([^（(]*（[^）)]*）[^）)]*)$|^([^（(]*\\([^)]*\\)[^)]*)$';

3. 查找包含多对括号的记录
sql
Copy
Edit
SELECT id, hanzi
FROM word_entry
WHERE hanzi REGEXP '（[^）]*）.*（[^）]*）|\\([^)]*\\).*\\([^)]*\\)';

我不知道有多少数据是，只包含一半括号的。没查过。先不管了。

いれかわりたちかわり
入れ替(わ)り立ち替(わ)り
怎么会有这种数据啊，，，，先不管了。

词典各部分解析的有问题。

改变设计思路。 第一个词为最常见的形式，但是它不一定是假名。所以，第二个词一定是读音，是假名，因此把它作为读音来记录。
第一个词记录为最常见的形式。第三个词，记录为汉字。它不是在每个词条中都存在。之后的第四个，记录为解释。

既然字典设计好之后，全都是查的，那么是不是可以换一个存储引擎。因为也不需要事务了。甚至可以全部放在内存中。

う う1 五十音圖「あ行」第三音、「わ行」第三音。母音之一，發音為u。
还有这种特殊情况需要处理

貌似，有回车，有 ▸ 这个是举例子。衍：之后就是衍生，它之后就全是衍生内容。 从 1 2 来划分不同意义和用法。⇒ 貌似是同义词 ● 貌似是常用的习语。

⇎ 这个是啥，反义词吗。确认是反义词。
① 这种需要去掉④⑤

处理方法，1，先去掉带圈圈的数字。2，取 第一条。
遇到换行符和紧跟的数字，得到第二第三条。
得到换行符紧跟着▸，那么得到例句。
得到换行符和⇎，得到反义词。
得到换行符和⇒，那么得到近义词。
得到换行符和●，那么得到常用的习语。

我们来设计结构。外面是一个数组，我们认为衍生内容是和固定某一条用法相关的，因为衍生内容并不总出现在最后。